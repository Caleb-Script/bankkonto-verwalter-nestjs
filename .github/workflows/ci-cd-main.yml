name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 60-dockerfile-bugfix # Trigger
    tags:
      - 'v*'  # Nur fÃ¼r Versionstags (z.B. v1.0.0)
  schedule:
  - cron: "0 2 * * 1-5"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Compile TypeScript
        run: npx tsc

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: dist

      - name: zip node_modules
        run: zip -r nm.zip node_modules

      - name: Upload node_modules folder
        uses: actions/upload-artifact@v4
        with:
          name: node_modules-${{ matrix.node-version }}
          path: nm.zip

  analyze:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Tests
        run: npm t

      - name: Lint code
        run: npm run eslint

      - name: Security audit
        run: npm audit --omit=dev

      - name: Generate documentation (TypeDoc)
        run: npm run typedoc

  package:
    runs-on: ubuntu-latest
    needs: [build, analyze]
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: dist

      - name: Package distribution
        run: zip -r dist.zip dist

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: dist-package-${{ matrix.node-version }}
          path: dist.zip

  docker:
    runs-on: ubuntu-latest
    needs: package
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist-package-${{ matrix.node-version }}
          path: ./
      - name: unzip node_modules
        run: unzip dist.zip -d ./dist

      - name: Download node_modules folder
        uses: actions/download-artifact@v4
        with:
          name: node_modules-${{ matrix.node-version }}
          path: ./

      - name: unzip node_modules
        run: unzip nm.zip -d ./node_modules

      - name: Create .env file
        run: |
          echo "NODE_ENV=development" >> .env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env
          echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}" >> .env
          echo "SNYK_TOKEN=${{ secrets.SNYK_TOKEN }}" >> .env

      - name: Build Docker image
        run: |
          docker build \
            --build-arg NODE_ENV=development \
            --build-arg CLIENT_SECRET=${{ secrets.CLIENT_SECRET }} \
            --build-arg SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
            --build-arg SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} \
            -t gruppe-4/bankkonto:2024.10.1 .

      - name: Clean up .env file
        run: rm .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to registry
        run: |
          docker tag gruppe-4/bankkonto:2024.10.1 calebscript/bankkonto-verwalter:2024.10.1
          docker push calebscript/bankkonto-verwalter:2024.10.1

  deploy:
    runs-on: self-hosted
    needs: docker
    strategy:
      matrix:
        node-version: [20.x]
    steps:
     - name: Checkout code
       uses: actions/checkout@v4

     - name: Set up Kubernetes context
       run: |
         # Setze den kubectl Kontext auf deinen lokalen Docker Desktop Cluster
         kubectl config use-context docker-desktop

     - name: Apply Postgres PersistentVolume
       run: |
         kubectl apply -f .extras/kubernetes/postgres-pv.yml --namespace=bankkonto-namespace

     - name: Apply PgAdmin PersistentVolume
       run: |
         kubectl apply -f .extras/kubernetes/pgadmin-pv.yml --namespace=bankkonto-namespace

     - name: Apply Keycloak PersistentVolume
       run: |
         kubectl apply -f .extras/kubernetes/keycloak-pv.yml --namespace=bankkonto-namespace

     - name: Apply Remaining Kubernetes Resources
       run: |
         kubectl apply -f .extras/kubernetes/ --namespace=bankkonto-namespace

     - name: Wait for Deployment Rollout
       run: |
         # Warte, bis das Deployment erfolgreich ausgerollt ist
         kubectl rollout status deployment/bankkonto-app -n bankkonto-namespace

